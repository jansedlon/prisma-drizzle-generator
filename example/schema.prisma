generator client {
  provider = "prisma-client-js"
}

generator drizzle {
  provider = "dist/index.js"
  output   = "./generated/drizzle"
  moduleResolution = "nodeNext"
  formatter = "biome"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  MODERATOR
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  /// @drizzle.type(type: "varchar", length: 255)
  username  String   @unique
  
  /// @drizzle.default(value: "0")
  points    Int      @default(0)

  posts     Post[]
  comments  Comment[]
  profile   Profile?

  @@map("users")
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments  Comment[]
  tags      Tag[]

  @@map("posts")
}

model Comment {
  id      String @id @default(uuid())
  content String
  postId  String
  userId  String

  post    Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  user    User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("comments")
}

model Profile {
  id     String  @id @default(uuid())
  bio    String?
  avatar String?
  userId String  @unique

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("profiles")
}

model Tag {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]

  @@map("tags")
}